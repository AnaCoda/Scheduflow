$BORDERCOLORS: #2b87ff, #ffb90a, #71ce67;

.wrap {
    width: 70%;
    margin: 5% 15%;

    & > * {
        border-width: 5px;
        border-style: solid;
        border-radius: 10px;
        padding: 1rem;
        
    }
}

.wrap h1 {
    width: auto;
    font-size: 4em;
    display: flex;
    align-items: center;
    // margin: 0em 0em 0.2em;
    padding-top: 0.5em;
    line-height: 0.7em;
    margin-bottom: 1rem;
    border-color: nth($BORDERCOLORS, 1);
}

.chart-container {
    border-color: #ddd
}

.chart {
    /* overflow: hidden !important; */
    /* width: 0% !important; */
    display: flex;
    margin-bottom: 1em;
}


body {
    color: #212121;
    -webkit-font-smoothing: antialiased;
}

.bar {
    /*width: 0px;*/
    /*margin: .25em 0;*/
    color: #fff;
    height: 60px;
    position: relative;
    vertical-align: middle;
    border-radius: 30px;
    box-shadow: 8px 4px 22px -6px rgba(0,0,0,0.35);
}

.finished { // execute this for any .bar elements that are width: 0
    box-shadow: none;
}

@for $i from 1 through length($BORDERCOLORS) {
    .chart:nth-of-type(#{length($BORDERCOLORS)}n + #{$i}) .bar {
        background-color: nth($BORDERCOLORS, $i);
    }
}

.bar:nth-of-type(even) {
    background: #ff6461;
}

// .labelstack {
//     text-align: center;
//     display: inline-flex;
//     align-items: center;
//     display: table-cell;
//     vertical-align: middle;
//     display: table;
//     margin: 0 auto;
//     top: 1em;
//     padding: .15em;
//     position: absolute;
//     margin-left: 40%;
//     font-weight: 600;
//     font-size: 16px;
// }

.label {
    height: 60px;
    width: 7em;
    /* display: inline-block; */
    position: static;
    z-index: 2;
    font-weight: bold;
    // color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 1em;
    border-radius: 30px;
    border-width: 5px;
    border-style: solid;
    box-sizing: border-box;
}

@for $i from 1 through length($BORDERCOLORS) {
    .chart:nth-of-type(#{length($BORDERCOLORS)}n + #{$i})>.label {
        color: nth($BORDERCOLORS, $i);
        border-color: nth($BORDERCOLORS, $i);
        // color: scale-color(nth($BORDERCOLORS, $i), $lightness: 15%);
        // border-color: scale-color(nth($BORDERCOLORS, $i), $lightness: 15%);
    }
}

.labelstack, .count, .countx {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    height: 60px;
    right: .5em;
    // top: 1.5em;
    // padding: .15em;
    font-size: 1em;
    font-weight: bold;
}

.labelstack {
    right: 2em;
}